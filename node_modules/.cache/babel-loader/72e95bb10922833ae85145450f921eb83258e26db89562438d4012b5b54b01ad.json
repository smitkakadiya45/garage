{"ast":null,"code":"import axios from \"axios\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nconst abc = {\n  loading: false,\n  data: null,\n  error: null\n};\nfunction reducer(state = abc, action) {\n  switch (action.type) {\n    case \"start\":\n      return {\n        ...state,\n        loading: true\n      };\n      break;\n    case \"Insert\":\n      return {\n        ...state,\n        loading: false\n      };\n      break;\n    case \"fail\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n      break;\n    default:\n      return state;\n      break;\n  }\n}\nfunction Inq(name, email, subject, number, massage) {\n  return async dis => {\n    dis({\n      type: \"start\"\n    });\n    try {\n      var response = await axios.post(\"https://g-b9eg.onrender.com/inquiry\", {\n        name,\n        email,\n        subject,\n        number,\n        massage\n      });\n      dis({\n        type: \"Insert\"\n      });\n    } catch (error) {\n      dis({\n        type: \"fail\",\n        payload: error\n      });\n    }\n  };\n}\n_c = Inq;\nfunction ser(name, email, service, date, time, notes, number) {\n  return async dis => {\n    dis({\n      type: \"start\"\n    });\n    try {\n      await axios.post(\"https://g-b9eg.onrender.com/servicebook\", {\n        name,\n        email,\n        service,\n        date,\n        time,\n        notes,\n        number\n      });\n      dis({\n        type: \"Insert\"\n      });\n    } catch (error) {\n      dis({\n        type: \"fail\",\n        payload: error\n      });\n    }\n  };\n}\nfunction plan(name, email, serviceplan, date, time, number, price) {\n  return async dis => {\n    dis({\n      type: \"start\"\n    });\n    try {\n      await axios.post(\"https://g-b9eg.onrender.com/serviceplan\", {\n        name,\n        email,\n        serviceplan,\n        date,\n        time,\n        number,\n        price\n      });\n      dis({\n        type: \"Insert\"\n      });\n    } catch (error) {\n      dis({\n        type: \"fail\",\n        payload: error\n      });\n    }\n  };\n}\nconst st = createStore(reducer, applyMiddleware(thunk));\nexport { st, Inq, ser, plan };\nvar _c;\n$RefreshReg$(_c, \"Inq\");","map":{"version":3,"names":["axios","applyMiddleware","createStore","thunk","abc","loading","data","error","reducer","state","action","type","payload","Inq","name","email","subject","number","massage","dis","response","post","_c","ser","service","date","time","notes","plan","serviceplan","price","st","$RefreshReg$"],"sources":["D:/garage template/frontend/src/Redux.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\n\r\nconst abc = {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n}\r\n\r\n\r\nfunction reducer(state = abc, action) {\r\n\r\n    switch (action.type) {\r\n        case \"start\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case \"Insert\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case \"fail\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Inq(name, email, subject, number, massage) {\r\n\r\n    return async (dis) => {\r\n        dis({\r\n            type: \"start\"\r\n        })\r\n        try {\r\n\r\n            var response = await axios.post(\"https://g-b9eg.onrender.com/inquiry\", { name, email, subject, number, massage });\r\n\r\n            dis({\r\n                type: \"Insert\"\r\n            })\r\n        }\r\n        catch (error) {\r\n            dis({\r\n                type: \"fail\",\r\n                payload: error\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction ser(name, email, service, date, time, notes, number) {\r\n\r\n    return async (dis) => {\r\n        dis({\r\n            type: \"start\"\r\n        })\r\n        try {\r\n\r\n            await axios.post(\"https://g-b9eg.onrender.com/servicebook\", { name, email, service, date, time, notes, number });\r\n\r\n            dis({\r\n                type: \"Insert\"\r\n            })\r\n        }\r\n        catch (error) {\r\n            dis({\r\n                type: \"fail\",\r\n                payload: error\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\nfunction plan(name, email, serviceplan, date, time, number, price) {\r\n\r\n    return async (dis) => {\r\n        dis({\r\n            type: \"start\"\r\n        })\r\n        try {\r\n\r\n            await axios.post(\"https://g-b9eg.onrender.com/serviceplan\", { name, email, serviceplan, date, time, number, price });\r\n\r\n            dis({\r\n                type: \"Insert\"\r\n            })\r\n        }\r\n        catch (error) {\r\n            dis({\r\n                type: \"fail\",\r\n                payload: error\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst st = createStore(reducer, applyMiddleware(thunk));\r\n\r\n\r\nexport { st, Inq, ser, plan };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}