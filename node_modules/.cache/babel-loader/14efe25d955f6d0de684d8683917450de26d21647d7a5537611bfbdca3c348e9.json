{"ast":null,"code":"import axios from \"axios\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nconst abc = {\n  loading: false,\n  data: null,\n  error: null\n};\nfunction reducer(state = abc, action) {\n  switch (action.type) {\n    case \"start\":\n      return {\n        ...state,\n        loading: true\n      };\n      break;\n    case \"Insert\":\n      return {\n        ...state,\n        loading: false\n      };\n      break;\n    case \"fail\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n      break;\n    default:\n      return state;\n      break;\n  }\n}\nfunction InsertData(Obj) {\n  return async dis => {\n    dis({\n      type: \"start\"\n    });\n    try {\n      var response = await axios.post(\"https://g-b9eg.onrender.com/inquiry\", Obj);\n      dis({\n        type: \"Insert\"\n      });\n    } catch (error) {\n      dis({\n        type: \"fail\",\n        payload: error\n      });\n    }\n  };\n}\n_c = InsertData;\nconst st = createStore(reducer, applyMiddleware(thunk));\nexport { st, InsertData };\nvar _c;\n$RefreshReg$(_c, \"InsertData\");","map":{"version":3,"names":["axios","applyMiddleware","createStore","thunk","abc","loading","data","error","reducer","state","action","type","payload","InsertData","Obj","dis","response","post","_c","st","$RefreshReg$"],"sources":["D:/garage template/frontend/src/Redux.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\n\r\nconst abc = {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n}\r\n\r\n\r\nfunction reducer(state = abc, action) {\r\n\r\n    switch (action.type) {\r\n        case \"start\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case \"Insert\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case \"fail\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction InsertData(Obj) {\r\n\r\n    return async (dis) => {\r\n        dis({\r\n            type: \"start\"\r\n        })\r\n        try {\r\n            var response = await axios.post(\"https://g-b9eg.onrender.com/inquiry\",Obj);\r\n\r\n            dis({\r\n                type: \"Insert\"\r\n            })\r\n        }\r\n        catch (error) {\r\n            dis({\r\n                type: \"fail\",\r\n                payload: error\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst st = createStore(reducer, applyMiddleware(thunk));\r\n\r\n\r\nexport { st, InsertData};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,KAAK,QAAQ,aAAa;AAGnC,MAAMC,GAAG,GAAG;EACRC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACX,CAAC;AAGD,SAASC,OAAOA,CAACC,KAAK,GAAGL,GAAG,EAAEM,MAAM,EAAE;EAElC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,OAAO;MACR,OAAO;QACH,GAAGF,KAAK;QACRJ,OAAO,EAAE;MACb,CAAC;MACD;IACJ,KAAK,QAAQ;MACT,OAAO;QACH,GAAGI,KAAK;QACRJ,OAAO,EAAE;MACb,CAAC;MACD;IACJ,KAAK,MAAM;MACP,OAAO;QACH,GAAGI,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;MACD;IAEJ;MACI,OAAOH,KAAK;MACZ;EACR;AAEJ;AAGA,SAASI,UAAUA,CAACC,GAAG,EAAE;EAErB,OAAO,MAAOC,GAAG,IAAK;IAClBA,GAAG,CAAC;MACAJ,IAAI,EAAE;IACV,CAAC,CAAC;IACF,IAAI;MACA,IAAIK,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,qCAAqC,EAACH,GAAG,CAAC;MAE1EC,GAAG,CAAC;QACAJ,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,CACD,OAAOJ,KAAK,EAAE;MACVQ,GAAG,CAAC;QACAJ,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEL;MACb,CAAC,CAAC;IACN;EAGJ,CAAC;AAEL;AAACW,EAAA,GAvBQL,UAAU;AA4BnB,MAAMM,EAAE,GAAGjB,WAAW,CAACM,OAAO,EAAEP,eAAe,CAACE,KAAK,CAAC,CAAC;AAGvD,SAASgB,EAAE,EAAEN,UAAU;AAAE,IAAAK,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}